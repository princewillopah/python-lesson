# import sys
# from PyQt5.QtWidgets import QApplication, QWidget
# # =============================================================
# # # ---------------MAIN WINDOW--------------------------------
# # ===============================================================
# if __name__ == '__main__':
#     app = QApplication(sys.argv)
#     w = QWidget()
#     w.resize(250, 350)
#     w.move(300, 300)
#     w.setWindowTitle('Simple TEMP')
#     w.show()
# sys.exit(app.exec_())
# # ------------------------------------------------------------------------
# import sys
# from PyQt5.QtWidgets import QApplication, QWidget
# class App(QWidget):
#     def __init__(self):
#         super().__init__()
#         self.title = 'PyQt5 simple window - pythonspot.com'
#         self.left = 10
#         self.top = 10
#         self.width = 500
#         self.height = 480
#         self.initUI()
#     def initUI(self):
#         self.setWindowTitle(self.title)
#         self.setGeometry(self.left, self.top, self.width, self.height)
#         self.show()
# if __name__ == '__main__':
#     app = QApplication(sys.argv)
#     ex = App()
#     sys.exit(app.exec_())
# # =============================================================
# # # ---------------include icon--------------------------------
# # ===============================================================
# import sys
# from PyQt5.QtWidgets import QApplication, QWidget
# from PyQt5.QtGui import QIcon    #for icon
# if __name__ == '__main__':
#     app = QApplication(sys.argv)
#     w = QWidget()
#     w.resize(250, 350)
#     w.move(300, 300)
#     w.setWindowTitle('Simple TEMP')
#     w.setWindowIcon(QIcon('contrast.png')) #for icon
#     w.show()
# sys.exit(app.exec_())
# ------------------------------------------------------------------------
# import sys
# from PyQt5.QtWidgets import QApplication, QWidget
# from PyQt5.QtGui import QIcon
# class Example(QWidget):
#     def __init__(self):
#         super().__init__()
#
#         self.initUI()
#     def initUI(self):
#         self.setGeometry(300, 300, 300, 220)
#         self.setWindowTitle('my window icon')
#         self.setWindowIcon(QIcon('contrast.png'))
#         self.show()
# if __name__ == '__main__':
#     app = QApplication(sys.argv)
#     ex = Example()
#     sys.exit(app.exec_())

# # =============================================================
# # # ---------------include statusbar message--------------------------------
# ===============================================================
# import sys
# from PyQt5.QtWidgets import QApplication, QWidget,QMainWindow
# from PyQt5.QtGui import QIcon #for icon
# if __name__ == '__main__':
#     app = QApplication(sys.argv)
#     w = QWidget()
#     w.resize(250, 350)
#     w.move(300, 300)
#     w.setWindowTitle('Simple TEMP')
#     w.setWindowIcon(QIcon('contrast.png')) #for icon
#     # w.statusBar().showMessage('Message in statusbar.')
#     w.show()
# sys.exit(app.exec_())
# ------------------------------------------------------------------------
# import sys
# from PyQt5.QtWidgets import QApplication, QWidget, QMainWindow
# from PyQt5.QtGui import QIcon
# class Example(QMainWindow): #Qmainwindow is inherented class where  statusBar().showMessage() objects are found
#     def __init__(self):
#         super().__init__()
#         self.initUI()
#     def initUI(self):
#         self.setGeometry(300, 300, 300, 220)
#         self.setWindowTitle('my window icon')
#         self.setWindowIcon(QIcon('contrast.png'))
#         self.statusBar().showMessage('princewill in statusbar.')
#         self.show()
# if __name__ == '__main__':
#     app = QApplication(sys.argv)
#     ex = Example()
#     sys.exit(app.exec_())
# # =============================================================
# # # ---------------include button / tooltip--------------------------------
# ===============================================================
# import sys
# from PyQt5.QtWidgets import (QWidget, QToolTip, QPushButton, QApplication)
# from PyQt5.QtGui import QIcon,QFont
# class Example(QWidget):
#     def __init__(self):
#         super().__init__()
#         self.initUI()
#     def initUI(self):
#         QToolTip.setFont(QFont('SansSerif', 10))
#         btn = QPushButton('click me', self)
#         btn.setToolTip('This is a <b>pls click me</b> widget')
#         btn.resize(btn.sizeHint())
#         btn.move(50, 50)
#         btn.clicked.connect(self.clickMe)
#
#         self.setGeometry(300, 300, 300, 220)
#         self.setWindowTitle('Tooltips button')
#         self.setWindowIcon(QIcon('contrast.png'))
#         self.show()
#     def clickMe(self):
#           print('hi princewill')
#
# if __name__ == '__main__':
#     app = QApplication(sys.argv)
#     ex = Example()
#     sys.exit(app.exec_())

# # =============================================================
# # # ---------------include msg btn--------------------------------
# ===============================================================
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *

# class Form(QWidget):
#     def __init__(self, parent=None):
#         super(Form, self).__init__(parent)
#
#         nameLabel = QLabel("Name:")
#         self.nameLine = QLineEdit()
#         self.submitButton = QPushButton("&Submit")
#
#         buttonLayout1 = QVBoxLayout()
#         buttonLayout1.addWidget(nameLabel)
#         buttonLayout1.addWidget(self.nameLine)
#         buttonLayout1.addWidget(self.submitButton)
#
#         self.submitButton.clicked.connect(self.submitContact)
#
#         mainLayout = QGridLayout()
#         # mainLayout.addWidget(nameLabel, 0, 0)
#         mainLayout.addLayout(buttonLayout1, 0, 1)
#
#         self.setLayout(mainLayout)
#         self.setWindowTitle("Hello Qt")
#
#     def submitContact(self):
#         name = self.nameLine.text()
#         if name == "":
#             QMessageBox.information(self, "Empty Field", "Please enter a name and address.")
#             return
#         else:
#             QMessageBox.information(self, "you re welcome!", "you re welcome, %s!" %name)
#
# if __name__ == '__main__':
#     import sys
#     app = QApplication(sys.argv)
#     screen = Form()
#     screen.show()
#     sys.exit(app.exec_())

# =========================================================================================================


